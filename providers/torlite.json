{
  "torlite": {
    "command": "cli",
    "help": "\u001b[36m\u001b[1müõ°Ô∏è  TORLITE CLI - a self-contained ACI for SOC-in-a-box workflows.\u001b[0m Current Profile: \u001b[32m\u001b[4mdefault\u001b[0m",
    "args": [],
    "options": {
      "-v": {
        "name": "-v",
        "help": "Print version banner and exit",
        "args": []
      },
      "--version": {
        "name": "--version",
        "help": "Print version banner and exit",
        "args": []
      },
      "-d": {
        "name": "-d",
        "help": "Increase verbosity: -d=WARNING, -dd=INFO, -ddd=DEBUG",
        "args": []
      },
      "--debug": {
        "name": "--debug",
        "help": "Increase verbosity: -d=WARNING, -dd=INFO, -ddd=DEBUG",
        "args": []
      },
      "--refresh-help-cache": {
        "name": "--refresh-help-cache",
        "help": "Force rebuild of CLI help cache",
        "args": []
      }
    },
    "subcommands": {
      "aztools": {
        "command": "aztools",
        "help": "\u001b[36m\u001b[1müîß Azure Client\u001b[0m    Current Profile: \u001b[32m\u001b[4mdefault\u001b[0m",
        "args": [],
        "options": {
          "-v": {
            "name": "-v",
            "help": "-v=INFO, -vv=DEBUG",
            "args": []
          },
          "--verbose": {
            "name": "--verbose",
            "help": "-v=INFO, -vv=DEBUG",
            "args": []
          },
          "--auth-mode": {
            "name": "--auth-mode",
            "help": "Azure auth flow: env | sp | device_code | msi",
            "args": [
              "env",
              "sp",
              "device_code",
              "msi"
            ]
          },
          "-p": {
            "name": "-p",
            "help": "ConfigStore profile to use",
            "args": []
          },
          "--profile": {
            "name": "--profile",
            "help": "ConfigStore profile to use",
            "args": []
          }
        },
        "subcommands": {
          "aad": {
            "command": "aad",
            "help": "Azure Active Directory (AAD/Entra) utilities for groups & RBAC.",
            "args": [],
            "options": {},
            "subcommands": {
              "check-user": {
                "command": "check-user",
                "help": "‚úÖ Check effective RBAC access for a user via groups",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "compare-users": {
                "command": "compare-users",
                "help": "üîç Compare groups and RBAC roles between two users",
                "args": [],
                "options": {
                  "--json-out": {
                    "name": "--json-out",
                    "help": "Dump raw JSON instead of tables.",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "show": {
                "command": "show",
                "help": "üëÄ Show all groups and roles for a user",
                "args": [],
                "options": {
                  "--json-out": {
                    "name": "--json-out",
                    "help": "Dump raw JSON instead of pretty tables.",
                    "args": []
                  }
                },
                "subcommands": {}
              }
            }
          },
          "backup": {
            "command": "cli",
            "help": "Unified Azure Backup Tool for Resources, Databases, and Networks.",
            "args": [],
            "options": {},
            "subcommands": {
              "databases": {
                "command": "backup-databases",
                "help": "Backup configuration of discovered Azure databases",
                "args": [],
                "options": {
                  "--resource-group": {
                    "name": "--resource-group",
                    "help": "Filter by resource group",
                    "args": []
                  },
                  "--refresh": {
                    "name": "--refresh",
                    "help": "Force refresh of cache before backup",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "networks": {
                "command": "backup-networks",
                "help": "Backup Azure Network and Firewall Configurations",
                "args": [],
                "options": {
                  "--resource-group": {
                    "name": "--resource-group",
                    "help": "Filter by resource group",
                    "args": []
                  },
                  "--refresh": {
                    "name": "--refresh",
                    "help": "Force refresh of cache before backup",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "resources": {
                "command": "backup_resources",
                "help": "Backup resources across all subscriptions",
                "args": [],
                "options": {
                  "--confirm": {
                    "name": "--confirm",
                    "help": "Prompt before exporting each resource.",
                    "args": []
                  }
                },
                "subcommands": {}
              }
            }
          },
          "collect-orphans": {
            "command": "main",
            "help": "Find and optionally remove orphaned Azure resources (disks, nics, public IPs).",
            "args": [],
            "options": {
              "--delete": {
                "name": "--delete",
                "help": "Actually delete the orphaned resources after unlocking.",
                "args": []
              },
              "--csv": {
                "name": "--csv",
                "help": "CSV output filename.",
                "args": []
              }
            },
            "subcommands": {}
          },
          "create-image": {
            "command": "create-image",
            "help": "Python wrapper for the create_image.sh shell script.",
            "args": [],
            "options": {
              "-r": {
                "name": "-r",
                "help": "Set the resource group",
                "args": []
              },
              "--resource-group": {
                "name": "--resource-group",
                "help": "Set the resource group",
                "args": []
              },
              "-v": {
                "name": "-v",
                "help": "Set the VM name",
                "args": []
              },
              "--vm-name": {
                "name": "--vm-name",
                "help": "Set the VM name",
                "args": []
              },
              "-s": {
                "name": "-s",
                "help": "Set the subscription ID",
                "args": []
              },
              "--subscription-id": {
                "name": "--subscription-id",
                "help": "Set the subscription ID",
                "args": []
              },
              "-i": {
                "name": "-i",
                "help": "Set the image name",
                "args": []
              },
              "--image-name": {
                "name": "--image-name",
                "help": "Set the image name",
                "args": []
              },
              "-g": {
                "name": "-g",
                "help": "Set the gallery name",
                "args": []
              },
              "--gallery-name": {
                "name": "--gallery-name",
                "help": "Set the gallery name",
                "args": []
              },
              "-d": {
                "name": "-d",
                "help": "Set the gallery image definition name",
                "args": []
              },
              "--gallery-definition": {
                "name": "--gallery-definition",
                "help": "Set the gallery image definition name",
                "args": []
              },
              "-l": {
                "name": "-l",
                "help": "Set the location",
                "args": []
              },
              "--location": {
                "name": "--location",
                "help": "Set the location",
                "args": []
              }
            },
            "subcommands": {}
          },
          "download": {
            "command": "download",
            "help": "Download a blob from an Azure storage container",
            "args": [],
            "options": {
              "-p": {
                "name": "-p",
                "help": "ConfigStore profile to use for auth & subscription context (unused)",
                "args": []
              },
              "--profile": {
                "name": "--profile",
                "help": "ConfigStore profile to use for auth & subscription context (unused)",
                "args": []
              },
              "-s": {
                "name": "-s",
                "help": "Azure subscription ID (will prompt if not provided)",
                "args": []
              },
              "--subscription-id": {
                "name": "--subscription-id",
                "help": "Azure subscription ID (will prompt if not provided)",
                "args": []
              },
              "-c": {
                "name": "-c",
                "help": "Name of the storage container (will prompt if not provided)",
                "args": []
              },
              "--container-name": {
                "name": "--container-name",
                "help": "Name of the storage container (will prompt if not provided)",
                "args": []
              },
              "-b": {
                "name": "-b",
                "help": "Name of the blob to download (will prompt if not provided)",
                "args": []
              },
              "--blob-name": {
                "name": "--blob-name",
                "help": "Name of the blob to download (will prompt if not provided)",
                "args": []
              },
              "-o": {
                "name": "-o",
                "help": "Where to write the downloaded blob",
                "args": []
              },
              "--output-dir": {
                "name": "--output-dir",
                "help": "Where to write the downloaded blob",
                "args": []
              }
            },
            "subcommands": {}
          },
          "extract": {
            "command": "extract",
            "help": "Extract the command tree for Azure CLI",
            "args": [],
            "options": {},
            "subcommands": {
              "commands": {
                "command": "commands",
                "help": "Manually refresh the Azure CLI command tree",
                "args": [],
                "options": {},
                "subcommands": {}
              }
            }
          },
          "list": {
            "command": "azure-list",
            "help": "Azure listing tool for subscriptions, resource-groups, VMs, NICs, storage accounts and key vaults.",
            "args": [],
            "options": {
              "-v": {
                "name": "-v",
                "help": "Increase verbosity: -v=INFO, -vv=DEBUG",
                "args": []
              },
              "--verbose": {
                "name": "--verbose",
                "help": "Increase verbosity: -v=INFO, -vv=DEBUG",
                "args": []
              },
              "--auth-mode": {
                "name": "--auth-mode",
                "help": "Azure auth flow: env | sp | device_code | msi",
                "args": [
                  "env",
                  "sp",
                  "device_code",
                  "msi"
                ]
              },
              "-p": {
                "name": "-p",
                "help": "ConfigStore profile to use",
                "args": []
              },
              "--profile": {
                "name": "--profile",
                "help": "ConfigStore profile to use",
                "args": []
              }
            },
            "subcommands": {
              "ip-lookup": {
                "command": "ip-lookup",
                "help": "Read IPs from a file and print related info if they exist in caches.\n    DNS (PTR/A/AAAA) optional; subnet CIDR (NIC map or interval); optional probes (ICMP/TCP);\n    optional AI-enhanced HINTs; summary/detailed outputs; CSV export.",
                "args": [],
                "options": {
                  "--file": {
                    "name": "--file",
                    "help": "Path to a text file of IPs (one per line).",
                    "args": []
                  },
                  "--show-missing": {
                    "name": "--show-missing",
                    "help": "Also show IPs that were not found in caches.",
                    "args": []
                  },
                  "--kind": {
                    "name": "--kind",
                    "help": "Which IP kinds to match from caches.",
                    "args": [
                      "all",
                      "private",
                      "public"
                    ]
                  },
                  "--dns": {
                    "name": "--dns",
                    "help": "Do PTR (reverse DNS) and A/AAAA lookups.",
                    "args": []
                  },
                  "--dns-timeout": {
                    "name": "--dns-timeout",
                    "help": "DNS socket timeout (seconds).",
                    "args": []
                  },
                  "--dns-limit": {
                    "name": "--dns-limit",
                    "help": "Max IPs to DNS-resolve.",
                    "args": []
                  },
                  "--dns-private": {
                    "name": "--dns-private",
                    "help": "Also DNS-resolve private/ULA IPs (default skips them).",
                    "args": []
                  },
                  "--dns-all": {
                    "name": "--dns-all",
                    "help": "Resolve DNS for ALL input IPs (not just misses).",
                    "args": []
                  },
                  "--dns-inline": {
                    "name": "--dns-inline",
                    "help": "Put resolved hostname into an FQDN column (hide extra DNS rows).",
                    "args": []
                  },
                  "--max-workers": {
                    "name": "--max-workers",
                    "help": "Parallel DNS/probe worker threads.",
                    "args": []
                  },
                  "--summary": {
                    "name": "--summary",
                    "help": "Show exactly one row per input IP (FOUND/MISSING).",
                    "args": []
                  },
                  "--detailed": {
                    "name": "--detailed",
                    "help": "Show all matches (VMs, NICs, DNS, inferred subnet). Default if neither flag given.",
                    "args": []
                  },
                  "--per-line": {
                    "name": "--per-line",
                    "help": "Summary mode: keep duplica\u001b[Ote IPs as separate rows (no de-dup).",
                    "args": []
                  },
                  "--probe-scope": {
                    "name": "--probe-scope",
                    "help": "Which IPs to probe. 'all' probes every input IP (deduped).",
                    "args": [
                      "missing",
                      "all",
                      "nomatch"
                    ]
                  },
                  "--probe": {
                    "name": "--probe",
                    "help": "Enable reachability checks (ICMP + TCP).",
                    "args": []
                  },
                  "--probe-ports": {
                    "name": "--probe-ports",
                    "help": "Comma-separated TCP ports (UDP-only ports are ignored).",
                    "args": []
                  },
                  "--probe-timeout": {
                    "name": "--probe-timeout",
                    "help": "Per-connection timeout seconds for TCP checks.",
                    "args": []
                  },
                  "--probe-limit": {
                    "name": "--probe-limit",
                    "help": "Max IPs to probe (after scope selection).",
                    "args": []
                  },
                  "--probe-overall": {
                    "name": "--probe-overall",
                    "help": "Overall time budget (seconds) for TCP probes across all selected IPs.",
                    "args": []
                  },
                  "--probe-batch-time": {
                    "name": "--probe-batch-time",
                    "help": "Scheduler tick for gathering completed futures (seconds).",
                    "args": []
                  },
                  "--icmp": {
                    "name": "--icmp",
                    "help": "Attempt ICMP ping (uses system ping).",
                    "args": []
                  },
                  "--hint-mode": {
                    "name": "--hint-mode",
                    "help": "How to compute HINT: rule=local heuristics; ai=LLM only; hybrid=rules then AI if weak.",
                    "args": [
                      "rule",
                      "ai",
                      "hybrid"
                    ]
                  },
                  "--ai-model": {
                    "name": "--ai-model",
                    "help": "OpenAI-compatible chat model to use for AI hints.",
                    "args": []
                  },
                  "--ai-temperature": {
                    "name": "--ai-temperature",
                    "help": "LLM temperature; keep 0.0 for deterministic hints.",
                    "args": []
                  },
                  "--ai-budget": {
                    "name": "--ai-budget",
                    "help": "Max number of AI hint calls per run (hybrid/ai modes).",
                    "args": []
                  },
                  "--mask-fqdn": {
                    "name": "--mask-fqdn",
                    "help": "Mask FQDNs before sending to AI (only domain tail).",
                    "args": []
                  },
                  "--out-csv": {
                    "name": "--out-csv",
                    "help": "Write a SUMMARY CSV (one row per IP, incl. enrichment) to this path.",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "networks": {
                "command": "networks",
                "help": "List cached VNets/NICs/Subnets, filter by subscription/RG.",
                "args": [],
                "options": {
                  "--subscription-id": {
                    "name": "--subscription-id",
                    "help": "Filter by subscription",
                    "args": []
                  },
                  "--resource-group": {
                    "name": "--resource-group",
                    "help": "Filter by RG",
                    "args": []
                  },
                  "--kind": {
                    "name": "--kind",
                    "help": "Which network resources to list",
                    "args": [
                      "vnet",
                      "nic",
                      "subnet",
                      "all"
                    ]
                  },
                  "--refresh": {
                    "name": "--refresh",
                    "help": "Refresh network cache",
                    "args": []
                  },
                  "--verbose": {
                    "name": "--verbose",
                    "help": "Verbose output during refresh",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "networks-stats": {
                "command": "networks-stats",
                "help": "Print counts from cached_networks for quick sanity.",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "resource-groups": {
                "command": "resource-groups",
                "help": "List cached RGs, filter by subscription.",
                "args": [],
                "options": {
                  "--subscription-id": {
                    "name": "--subscription-id",
                    "help": "Filter by subscription",
                    "args": []
                  },
                  "--refresh": {
                    "name": "--refresh",
                    "help": "Refresh RG cache",
                    "args": []
                  },
                  "--verbose": {
                    "name": "--verbose",
                    "help": "Verbose output during refresh",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "storage-accounts": {
                "command": "storage-accounts",
                "help": "List storage accounts and/or containers (cached or freshly).",
                "args": [],
                "options": {
                  "--subscription-id": {
                    "name": "--subscription-id",
                    "help": "Filter by subscription",
                    "args": []
                  },
                  "--resource-group": {
                    "name": "--resource-group",
                    "help": "Filter by RG (for output)",
                    "args": []
                  },
                  "--account-name": {
                    "name": "--account-name",
                    "help": "Filter by storage account name (for output)",
                    "args": []
                  },
                  "--kind": {
                    "name": "--kind",
                    "help": "What to refresh/list",
                    "args": [
                      "accounts",
                      "containers",
                      "all"
                    ]
                  },
                  "--refresh": {
                    "name": "--refresh",
                    "help": "Refresh storage cache",
                    "args": []
                  },
                  "--verbose": {
                    "name": "--verbose",
                    "help": "Verbose output during refresh",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "storage-containers": {
                "command": "storage-containers",
                "help": "List storage containers (cached or freshly). Uses ARG for accounts, ARM for containers.",
                "args": [],
                "options": {
                  "--subscription-id": {
                    "name": "--subscription-id",
                    "help": "Filter by subscription",
                    "args": []
                  },
                  "--resource-group": {
                    "name": "--resource-group",
                    "help": "Filter by RG",
                    "args": []
                  },
                  "--account-name": {
                    "name": "--account-name",
                    "help": "Filter by storage account name",
                    "args": []
                  },
                  "--refresh": {
                    "name": "--refresh",
                    "help": "Refresh container cache",
                    "args": []
                  },
                  "--verbose": {
                    "name": "--verbose",
                    "help": "Verbose output",
                    "args": []
                  },
                  "--max-workers": {
                    "name": "--max-workers",
                    "help": "Parallel accounts to scan",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "subscriptions": {
                "command": "subscriptions",
                "help": "List Azure subscriptions (cached or freshly).",
                "args": [],
                "options": {
                  "--refresh": {
                    "name": "--refresh",
                    "help": "Refresh subscription cache",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "vms": {
                "command": "vms",
                "help": "List cached Azure VMs (with private IPs) and optional Arc servers. Filter by subscription/RG.",
                "args": [],
                "options": {
                  "--subscription-id": {
                    "name": "--subscription-id",
                    "help": "Filter by subscription",
                    "args": []
                  },
                  "--resource-group": {
                    "name": "--resource-group",
                    "help": "Filter by RG",
                    "args": []
                  },
                  "--refresh": {
                    "name": "--refresh",
                    "help": "Refresh VM/Arc cache",
                    "args": []
                  },
                  "--include-arc": {
                    "name": "--include-arc",
                    "help": "Include Arc-enabled servers (no IPs via ARG)",
                    "args": []
                  },
                  "--verbose": {
                    "name": "--verbose",
                    "help": "Verbose output during refresh",
                    "args": []
                  }
                },
                "subcommands": {}
              }
            }
          },
          "run-script": {
            "command": "run-script",
            "help": "Run a script or copy files on Azure/Arc VMs.",
            "args": [],
            "options": {
              "--subscription-id": {
                "name": "--subscription-id",
                "help": "Azure subscription ID (optional)",
                "args": []
              },
              "--vm-names": {
                "name": "--vm-names",
                "help": "Comma/space-separated VM names (optional)",
                "args": []
              },
              "--resource-group": {
                "name": "--resource-group",
                "help": "Resource group (optional)",
                "args": []
              },
              "--vm-list-file": {
                "name": "--vm-list-file",
                "help": "File with list of VM names (optional)",
                "args": []
              },
              "--script-path": {
                "name": "--script-path",
                "help": "Local script to execute (optional)",
                "args": []
              },
              "--copy-file": {
                "name": "--copy-file",
                "help": "Copy a file to the VMs. Provide a local path or blob URL (SAS). Use --execute-after-copy to run it.",
                "args": []
              },
              "--execute-after-copy": {
                "name": "--execute-after-copy",
                "help": "Execute the copied file (non-Arc) or run on Arc via run-command.",
                "args": []
              },
              "--create-work-item": {
                "name": "--create-work-item",
                "help": "Create work item with execution results (optional)",
                "args": []
              },
              "--title": {
                "name": "--title",
                "help": "Custom work item title (optional)",
                "args": []
              },
              "--no-wait": {
                "name": "--no-wait",
                "help": "Do not wait for script execution results.",
                "args": []
              },
              "--start-vms": {
                "name": "--start-vms",
                "help": "Start VMs if not already running.",
                "args": []
              },
              "--reboot": {
                "name": "--reboot",
                "help": "Reboot VMs (skips script execution).",
                "args": []
              },
              "--override-defaults": {
                "name": "--override-defaults",
                "help": "Override cached subscription filters.",
                "args": []
              },
              "--subscriptions": {
                "name": "--subscriptions",
                "help": "Explicit subscriptions (use with --override-defaults).",
                "args": []
              },
              "--dump-dir": {
                "name": "--dump-dir",
                "help": "Directory to write raw stdout/stderr and JSON results per-VM.",
                "args": []
              }
            },
            "subcommands": {}
          },
          "show": {
            "command": "show",
            "help": "Query Azure state for resource groups",
            "args": [],
            "options": {
              "-d": {
                "name": "-d",
                "help": "",
                "args": [
                  "0",
                  "1",
                  "2"
                ]
              },
              "--debug": {
                "name": "--debug",
                "help": "",
                "args": [
                  "0",
                  "1",
                  "2"
                ]
              },
              "--auth-mode": {
                "name": "--auth-mode",
                "help": "Azure auth flow: msi=ManagedIdentityCredential, env=EnvironmentCredential, sp=ClientSecretCredential, device_code=DeviceCodeCredential",
                "args": [
                  "msi",
                  "env",
                  "sp",
                  "device_code"
                ]
              },
              "-p": {
                "name": "-p",
                "help": "ConfigStore profile to use for creds/cloud choice",
                "args": []
              },
              "--profile": {
                "name": "--profile",
                "help": "ConfigStore profile to use for creds/cloud choice",
                "args": []
              }
            },
            "subcommands": {
              "health": {
                "command": "health",
                "help": "Show health for a resource group",
                "args": [],
                "options": {
                  "-s": {
                    "name": "-s",
                    "help": "Target subscription ID",
                    "args": []
                  },
                  "--subscription-id": {
                    "name": "--subscription-id",
                    "help": "Target subscription ID",
                    "args": []
                  },
                  "-g": {
                    "name": "-g",
                    "help": "Resource group name",
                    "args": []
                  },
                  "--group": {
                    "name": "--group",
                    "help": "Resource group name",
                    "args": []
                  },
                  "-o": {
                    "name": "-o",
                    "help": "",
                    "args": [
                      "json",
                      "table"
                    ]
                  },
                  "--output": {
                    "name": "--output",
                    "help": "",
                    "args": [
                      "json",
                      "table"
                    ]
                  }
                },
                "subcommands": {}
              }
            }
          },
          "upload": {
            "command": "upload",
            "help": "Upload a local file as a blob into a storage container",
            "args": [],
            "options": {
              "--profile": {
                "name": "--profile",
                "help": "ConfigStore profile to use for auth/context",
                "args": []
              },
              "-s": {
                "name": "-s",
                "help": "Azure subscription ID to target",
                "args": []
              },
              "--subscription-id": {
                "name": "--subscription-id",
                "help": "Azure subscription ID to target",
                "args": []
              },
              "-c": {
                "name": "-c",
                "help": "Name of the storage container",
                "args": []
              },
              "--container-name": {
                "name": "--container-name",
                "help": "Name of the storage container",
                "args": []
              },
              "-f": {
                "name": "-f",
                "help": "Local file path to upload",
                "args": []
              },
              "--file-path": {
                "name": "--file-path",
                "help": "Local file path to upload",
                "args": []
              },
              "-b": {
                "name": "-b",
                "help": "Name to give the blob in the container",
                "args": []
              },
              "--blob-name": {
                "name": "--blob-name",
                "help": "Name to give the blob in the container",
                "args": []
              }
            },
            "subcommands": {}
          }
        }
      },
      "ansible": {
        "command": "ansible",
        "help": "\u001b[36m\u001b[1mü§ñ Ansible Client\u001b[0m  Current Profile: \u001b[32m\u001b[4mdefault\u001b[0m",
        "args": [],
        "options": {},
        "subcommands": {
          "check": {
            "command": "check",
            "help": "‚úÖ  Verify Ansible installation",
            "args": [],
            "options": {},
            "subcommands": {}
          },
          "fips": {
            "command": "fips",
            "help": "üõ°Ô∏è  Enable/verify FIPS mode (safe reboot) with optional sudoers guard",
            "args": [],
            "options": {
              "--user": {
                "name": "--user",
                "help": "Ensure sudoers for a single user before FIPS.",
                "args": []
              },
              "--users": {
                "name": "--users",
                "help": "Ensure sudoers for multiple users (repeat flag).",
                "args": []
              },
              "--skip-sudo-guard": {
                "name": "--skip-sudo-guard",
                "help": "Do not ensure sudoers before FIPS.",
                "args": []
              },
              "--create-user": {
                "name": "--create-user",
                "help": "Create user(s) if missing (when sudo guard on).",
                "args": []
              },
              "--group": {
                "name": "--group",
                "help": "Optional group to add users to (when sudo guard).",
                "args": []
              },
              "--nopasswd": {
                "name": "--nopasswd",
                "help": "NOPASSWD for sudoers (when sudo guard).",
                "args": []
              },
              "--reboot": {
                "name": "--reboot",
                "help": "Reboot if FIPS changes applied.",
                "args": []
              },
              "--timeout": {
                "name": "--timeout",
                "help": "Seconds to wait for SSH after reboot.",
                "args": []
              },
              "--inventory": {
                "name": "--inventory",
                "help": "Inventory file.",
                "args": []
              },
              "--limit": {
                "name": "--limit",
                "help": "Limit to host/group.",
                "args": []
              },
              "--check": {
                "name": "--check",
                "help": "Ansible check mode.",
                "args": []
              },
              "--ask-become-pass": {
                "name": "--ask-become-pass",
                "help": "Prompt for sudo password.",
                "args": []
              },
              "--debug": {
                "name": "--debug",
                "help": "Verbose Ansible output.",
                "args": []
              }
            },
            "subcommands": {}
          },
          "fleet-user": {
            "command": "fleet-user",
            "help": "üë§ Ensure one or more users have a validated sudoers drop-in",
            "args": [],
            "options": {
              "--user": {
                "name": "--user",
                "help": "Single user to grant.",
                "args": []
              },
              "--users": {
                "name": "--users",
                "help": "Repeat for multiple users, e.g. --users a --users b",
                "args": []
              },
              "--create-user": {
                "name": "--create-user",
                "help": "Create user(s) if missing.",
                "args": []
              },
              "--group": {
                "name": "--group",
                "help": "Optional group to add users to (e.g., wheel).",
                "args": []
              },
              "--nopasswd": {
                "name": "--nopasswd",
                "help": "Grant NOPASSWD sudo (default: on).",
                "args": []
              },
              "--inventory": {
                "name": "--inventory",
                "help": "Inventory file.",
                "args": []
              },
              "--limit": {
                "name": "--limit",
                "help": "Limit to host/group.",
                "args": []
              },
              "--check": {
                "name": "--check",
                "help": "Ansible check mode.",
                "args": []
              },
              "--ask-become-pass": {
                "name": "--ask-become-pass",
                "help": "Prompt for sudo password.",
                "args": []
              },
              "--debug": {
                "name": "--debug",
                "help": "Verbose Ansible output.",
                "args": []
              }
            },
            "subcommands": {}
          },
          "inventory": {
            "command": "inventory",
            "help": "üóíÔ∏è  Generate dynamic Ansible inventory",
            "args": [],
            "options": {},
            "subcommands": {}
          },
          "list-inventory": {
            "command": "list-inventory",
            "help": "üìÇ  List and display inventories",
            "args": [],
            "options": {
              "--directory": {
                "name": "--directory",
                "help": "Directory containing inventories.",
                "args": []
              },
              "-d": {
                "name": "-d",
                "help": "Directory containing inventories.",
                "args": []
              }
            },
            "subcommands": {}
          },
          "list-playbooks": {
            "command": "list-playbooks",
            "help": "üìú  List available Ansible playbooks",
            "args": [],
            "options": {
              "--directory": {
                "name": "--directory",
                "help": "Directory containing playbooks.",
                "args": []
              },
              "-d": {
                "name": "-d",
                "help": "Directory containing playbooks.",
                "args": []
              }
            },
            "subcommands": {}
          },
          "run": {
            "command": "run",
            "help": "‚ñ∂Ô∏è  Run an Ansible playbook by name or path",
            "args": [],
            "options": {
              "--inventory": {
                "name": "--inventory",
                "help": "Inventory file to use.",
                "args": []
              },
              "--limit": {
                "name": "--limit",
                "help": "Run on a specific host or group only.",
                "args": []
              },
              "--check": {
                "name": "--check",
                "help": "Run in Ansible check mode.",
                "args": []
              },
              "--debug": {
                "name": "--debug",
                "help": "Show full Ansible output.",
                "args": []
              }
            },
            "subcommands": {}
          },
          "show": {
            "command": "show",
            "help": "üëÄ  Show the full contents of a playbook",
            "args": [
              "compliance_inventory",
              "ensure_fips",
              "ensure_fleet_user",
              "ensure_packages",
              "ensure_safe_baseline",
              "install_lynis",
              "install_openscap",
              "install_osquery",
              "mde_linux",
              "pull_facts",
              "tanium_client",
              "tenable_agent",
              "torchshell",
              "upgrade-python"
            ],
            "options": {},
            "subcommands": {}
          }
        }
      },
      "soc": {
        "command": "soc",
        "help": "\u001b[36m\u001b[1müõ°Ô∏è  SOC Client\u001b[0m     Current Profile: \u001b[32m\u001b[4mdefault\u001b[0m",
        "args": [],
        "options": {
          "--profile": {
            "name": "--profile",
            "help": "ConfigStore profile to use",
            "args": []
          },
          "-p": {
            "name": "-p",
            "help": "ConfigStore profile to use",
            "args": []
          },
          "--debug": {
            "name": "--debug",
            "help": "Enable debug logging",
            "args": []
          }
        },
        "subcommands": {
          "audit": {
            "command": "audit",
            "help": "üîí  Run system audit commands remotely (e.g. selinux, auditctl, fail2ban, etc.)",
            "args": [],
            "options": {
              "--target": {
                "name": "--target",
                "help": "Target host(s) or 'all'",
                "args": []
              },
              "-t": {
                "name": "-t",
                "help": "Target host(s) or 'all'",
                "args": []
              },
              "--input-file": {
                "name": "--input-file",
                "help": "YAML or JSON input file with targets",
                "args": []
              },
              "-i": {
                "name": "-i",
                "help": "YAML or JSON input file with targets",
                "args": []
              },
              "--module": {
                "name": "--module",
                "help": "Security module to audit",
                "args": [
                  "selinux",
                  "auditctl",
                  "rsyslog",
                  "nftables",
                  "iptables",
                  "fail2ban",
                  "ssh-audit",
                  "all"
                ]
              },
              "-m": {
                "name": "-m",
                "help": "Security module to audit",
                "args": [
                  "selinux",
                  "auditctl",
                  "rsyslog",
                  "nftables",
                  "iptables",
                  "fail2ban",
                  "ssh-audit",
                  "all"
                ]
              },
              "--debug-ingest": {
                "name": "--debug-ingest",
                "help": "Print ingestion URL and DNS check info",
                "args": []
              }
            },
            "subcommands": {}
          },
          "config": {
            "command": "config",
            "help": "‚öôÔ∏è   Dump the stored SOC config for this profile",
            "args": [],
            "options": {},
            "subcommands": {}
          },
          "lynis": {
            "command": "lynis",
            "help": "üß™  Run Lynis hardening audit remotely and ingest results",
            "args": [],
            "options": {
              "--target": {
                "name": "--target",
                "help": "Target host(s) or 'all'",
                "args": []
              },
              "-t": {
                "name": "-t",
                "help": "Target host(s) or 'all'",
                "args": []
              },
              "--input-file": {
                "name": "--input-file",
                "help": "YAML or JSON input file with targets",
                "args": []
              },
              "-i": {
                "name": "-i",
                "help": "YAML or JSON input file with targets",
                "args": []
              },
              "--debug-ingest": {
                "name": "--debug-ingest",
                "help": "Print ingestion URL and DNS check info",
                "args": []
              }
            },
            "subcommands": {}
          },
          "nikto": {
            "command": "nikto",
            "help": "üåê Run Nikto web application scan and ingest findings",
            "args": [],
            "options": {
              "--url": {
                "name": "--url",
                "help": "Target URL to scan (e.g. https://example.com)",
                "args": []
              },
              "--id": {
                "name": "--id",
                "help": "Optional label to identify the web target",
                "args": []
              },
              "--threshold": {
                "name": "--threshold",
                "help": "Only include findings containing this keyword (e.g. high, xss)",
                "args": []
              },
              "--headers": {
                "name": "--headers",
                "help": "Custom HTTP headers (e.g. --headers 'Host: test.local')",
                "args": []
              },
              "--debug-ingest": {
                "name": "--debug-ingest",
                "help": "Print ingestion URL and DNS check info",
                "args": []
              }
            },
            "subcommands": {}
          },
          "nmap": {
            "command": "nmap",
            "help": "üó∫Ô∏è   Run nmap scan against one or more hosts",
            "args": [],
            "options": {
              "--target": {
                "name": "--target",
                "help": "Target host(s) or 'all'",
                "args": []
              },
              "-t": {
                "name": "-t",
                "help": "Target host(s) or 'all'",
                "args": []
              },
              "--input-file": {
                "name": "--input-file",
                "help": "YAML or JSON input file with targets",
                "args": []
              },
              "-i": {
                "name": "-i",
                "help": "YAML or JSON input file with targets",
                "args": []
              },
              "--args": {
                "name": "--args",
                "help": "Additional nmap arguments",
                "args": []
              },
              "-a": {
                "name": "-a",
                "help": "Additional nmap arguments",
                "args": []
              },
              "--show-filtered": {
                "name": "--show-filtered",
                "help": "Include filtered/closed ports in the output table",
                "args": []
              }
            },
            "subcommands": {}
          },
          "osquery": {
            "command": "osquery",
            "help": "üß†  Run osqueryi remotely via SSH and collect results",
            "args": [],
            "options": {
              "--target": {
                "name": "--target",
                "help": "Target host(s) or 'all'",
                "args": []
              },
              "-t": {
                "name": "-t",
                "help": "Target host(s) or 'all'",
                "args": []
              },
              "--query": {
                "name": "--query",
                "help": "Ad-hoc osquery to run",
                "args": []
              },
              "-q": {
                "name": "-q",
                "help": "Ad-hoc osquery to run",
                "args": []
              },
              "--input-file": {
                "name": "--input-file",
                "help": "YAML or JSON input file with targets",
                "args": []
              },
              "-i": {
                "name": "-i",
                "help": "YAML or JSON input file with targets",
                "args": []
              },
              "--debug-ingest": {
                "name": "--debug-ingest",
                "help": "Print ingestion URL and DNS check info",
                "args": []
              },
              "--preset": {
                "name": "--preset",
                "help": "Run a predefined query or all",
                "args": [
                  "processes",
                  "users",
                  "network",
                  "ssh_keys",
                  "cron",
                  "listening_services",
                  "binaries",
                  "all"
                ]
              }
            },
            "subcommands": {}
          }
        }
      },
      "azdev": {
        "command": "azdev",
        "help": "\u001b[36m\u001b[1m‚öô  AZDEV Client\u001b[0m    Current Profile: \u001b[32m\u001b[4mdefault\u001b[0m",
        "args": [],
        "options": {
          "-p": {
            "name": "-p",
            "help": "ConfigStore profile to use",
            "args": []
          },
          "--profile": {
            "name": "--profile",
            "help": "ConfigStore profile to use",
            "args": []
          },
          "-v": {
            "name": "-v",
            "help": "Increase verbosity: -v=INFO, -vv=DEBUG",
            "args": []
          },
          "--verbose": {
            "name": "--verbose",
            "help": "Increase verbosity: -v=INFO, -vv=DEBUG",
            "args": []
          }
        },
        "subcommands": {
          "auth": {
            "command": "auth",
            "help": "(Re)configure Azure DevOps URL & PAT and cache projects, areas, and team area settings.",
            "args": [],
            "options": {
              "-U": {
                "name": "-U",
                "help": "Azure DevOps organization URL (e.g. https://dev.azure.com/ORG). If unset, falls back to $AZ_DEVOPS_URL.",
                "args": []
              },
              "--base-url": {
                "name": "--base-url",
                "help": "Azure DevOps organization URL (e.g. https://dev.azure.com/ORG). If unset, falls back to $AZ_DEVOPS_URL.",
                "args": []
              },
              "-t": {
                "name": "-t",
                "help": "Personal Access Token (PAT). If unset, falls back to $AZ_DEVOPS_PASS.",
                "args": []
              },
              "--token": {
                "name": "--token",
                "help": "Personal Access Token (PAT). If unset, falls back to $AZ_DEVOPS_PASS.",
                "args": []
              },
              "--overwrite": {
                "name": "--overwrite",
                "help": "Overwrite existing PAT & URL if already set in the profile.",
                "args": []
              },
              "--areas-depth": {
                "name": "--areas-depth",
                "help": "Max depth to walk the Areas tree.",
                "args": []
              }
            },
            "subcommands": {}
          },
          "generate-qr": {
            "command": "generate-qr",
            "help": "Generate a QR code for a contact using vCard format.",
            "args": [],
            "options": {
              "--first-name": {
                "name": "--first-name",
                "help": "First name of the contact.",
                "args": []
              },
              "--last-name": {
                "name": "--last-name",
                "help": "Last name of the contact.",
                "args": []
              },
              "--title": {
                "name": "--title",
                "help": "Job title.",
                "args": []
              },
              "--org": {
                "name": "--org",
                "help": "Organization name.",
                "args": []
              },
              "--email": {
                "name": "--email",
                "help": "Email address.",
                "args": []
              },
              "--phone": {
                "name": "--phone",
                "help": "Phone number.",
                "args": []
              },
              "--url": {
                "name": "--url",
                "help": "Website or URL.",
                "args": []
              },
              "--output": {
                "name": "--output",
                "help": "Output filename.",
                "args": []
              }
            },
            "subcommands": {}
          },
          "issue": {
            "command": "issue",
            "help": "Manage Azure DevOps work items",
            "args": [],
            "options": {
              "-d": {
                "name": "-d",
                "help": "0=warning, 1=info, 2=debug",
                "args": [
                  "0",
                  "1",
                  "2"
                ]
              },
              "--debug": {
                "name": "--debug",
                "help": "0=warning, 1=info, 2=debug",
                "args": [
                  "0",
                  "1",
                  "2"
                ]
              }
            },
            "subcommands": {
              "create": {
                "command": "create",
                "help": "Create a new work item (auto-picks current sprint if you pass --team)",
                "args": [],
                "options": {
                  "-p": {
                    "name": "-p",
                    "help": "Azure DevOps project name (defaults to all cached projects if you omit this).",
                    "args": []
                  },
                  "--project": {
                    "name": "--project",
                    "help": "Azure DevOps project name (defaults to all cached projects if you omit this).",
                    "args": []
                  },
                  "-t": {
                    "name": "-t",
                    "help": "Work item type (e.g. Bug, Task)",
                    "args": []
                  },
                  "--type": {
                    "name": "--type",
                    "help": "Work item type (e.g. Bug, Task)",
                    "args": []
                  },
                  "--title": {
                    "name": "--title",
                    "help": "Title",
                    "args": []
                  },
                  "--assignee": {
                    "name": "--assignee",
                    "help": "Assigned-to user",
                    "args": []
                  },
                  "--description": {
                    "name": "--description",
                    "help": "Description/body",
                    "args": []
                  },
                  "--iteration": {
                    "name": "--iteration",
                    "help": "Explicit iteration path (e.g. Project\\Sprint 2025-05)",
                    "args": []
                  },
                  "--team": {
                    "name": "--team",
                    "help": "Team name (optional; used to auto-detect sprint if --iteration not given)",
                    "args": []
                  },
                  "--file": {
                    "name": "--file",
                    "help": "Attach this file",
                    "args": []
                  },
                  "--area": {
                    "name": "--area",
                    "help": "Area Path (e.g. Project\\Platform). Defaults to Team default area, then Project default.",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "search": {
                "command": "search",
                "help": "Fetch one or more work items by ID",
                "args": [],
                "options": {
                  "-p": {
                    "name": "-p",
                    "help": "Azure DevOps project name",
                    "args": []
                  },
                  "--project": {
                    "name": "--project",
                    "help": "Azure DevOps project name",
                    "args": []
                  },
                  "-d": {
                    "name": "-d",
                    "help": "Show full fields",
                    "args": []
                  },
                  "--details": {
                    "name": "--details",
                    "help": "Show full fields",
                    "args": []
                  },
                  "-o": {
                    "name": "-o",
                    "help": "Save results to JSON file",
                    "args": []
                  },
                  "--output-file": {
                    "name": "--output-file",
                    "help": "Save results to JSON file",
                    "args": []
                  }
                },
                "subcommands": {}
              }
            }
          },
          "pipeline": {
            "command": "pipeline",
            "help": "manage Azure DevOps pipelines",
            "args": [],
            "options": {
              "-d": {
                "name": "-d",
                "help": "0=no logs, 1=info, 2=debug",
                "args": [
                  "0",
                  "1",
                  "2"
                ]
              },
              "--debug": {
                "name": "--debug",
                "help": "0=no logs, 1=info, 2=debug",
                "args": [
                  "0",
                  "1",
                  "2"
                ]
              }
            },
            "subcommands": {
              "list-builds": {
                "command": "list-builds",
                "help": "List builds or inspect one by ID",
                "args": [],
                "options": {
                  "-b": {
                    "name": "-b",
                    "help": "Build ID to inspect",
                    "args": []
                  },
                  "--build-id": {
                    "name": "--build-id",
                    "help": "Build ID to inspect",
                    "args": []
                  },
                  "-a": {
                    "name": "-a",
                    "help": "Show artifacts",
                    "args": []
                  },
                  "--artifacts": {
                    "name": "--artifacts",
                    "help": "Show artifacts",
                    "args": []
                  },
                  "-l": {
                    "name": "-l",
                    "help": "Show logs",
                    "args": []
                  },
                  "--logs": {
                    "name": "--logs",
                    "help": "Show logs",
                    "args": []
                  },
                  "-A": {
                    "name": "-A",
                    "help": "Show only active builds",
                    "args": []
                  },
                  "--active": {
                    "name": "--active",
                    "help": "Show only active builds",
                    "args": []
                  },
                  "-u": {
                    "name": "-u",
                    "help": "Filter by requestedFor email",
                    "args": []
                  },
                  "--user": {
                    "name": "--user",
                    "help": "Filter by requestedFor email",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "list-pipelines": {
                "command": "list-pipelines",
                "help": "List pipelines or inspect one by ID",
                "args": [],
                "options": {
                  "-i": {
                    "name": "-i",
                    "help": "Pipeline ID to inspect",
                    "args": []
                  },
                  "--pipeline-id": {
                    "name": "--pipeline-id",
                    "help": "Pipeline ID to inspect",
                    "args": []
                  },
                  "-r": {
                    "name": "-r",
                    "help": "Show runs for pipeline-id",
                    "args": []
                  },
                  "--runs": {
                    "name": "--runs",
                    "help": "Show runs for pipeline-id",
                    "args": []
                  },
                  "-s": {
                    "name": "-s",
                    "help": "Filter runs by status",
                    "args": []
                  },
                  "--status": {
                    "name": "--status",
                    "help": "Filter runs by status",
                    "args": []
                  },
                  "-D": {
                    "name": "-D",
                    "help": "Show pipeline definition",
                    "args": []
                  },
                  "--details": {
                    "name": "--details",
                    "help": "Show pipeline definition",
                    "args": []
                  }
                },
                "subcommands": {}
              }
            }
          },
          "project": {
            "command": "project",
            "help": "Manage Azure DevOps projects",
            "args": [],
            "options": {},
            "subcommands": {
              "search": {
                "command": "search",
                "help": "Search for work items in Azure DevOps (headless)",
                "args": [],
                "options": {
                  "-k": {
                    "name": "-k",
                    "help": "Work item IDs, e.g. 12345",
                    "args": []
                  },
                  "--key": {
                    "name": "--key",
                    "help": "Work item IDs, e.g. 12345",
                    "args": []
                  },
                  "-p": {
                    "name": "-p",
                    "help": "Azure DevOps project name (defaults to all cached projects if you omit this).",
                    "args": []
                  },
                  "--project": {
                    "name": "--project",
                    "help": "Azure DevOps project name (defaults to all cached projects if you omit this).",
                    "args": []
                  },
                  "--sprint": {
                    "name": "--sprint",
                    "help": "Filter by sprint path",
                    "args": []
                  },
                  "-a": {
                    "name": "-a",
                    "help": "Filter by assigned-to user",
                    "args": []
                  },
                  "--assignee": {
                    "name": "--assignee",
                    "help": "Filter by assigned-to user",
                    "args": []
                  },
                  "-d": {
                    "name": "-d",
                    "help": "Display detailed fields",
                    "args": []
                  },
                  "--details": {
                    "name": "--details",
                    "help": "Display detailed fields",
                    "args": []
                  },
                  "-r": {
                    "name": "-r",
                    "help": "Filter by reporter",
                    "args": []
                  },
                  "--reporter": {
                    "name": "--reporter",
                    "help": "Filter by reporter",
                    "args": []
                  },
                  "-s": {
                    "name": "-s",
                    "help": "Filter by work item state",
                    "args": []
                  },
                  "--state": {
                    "name": "--state",
                    "help": "Filter by work item state",
                    "args": []
                  },
                  "-t": {
                    "name": "-t",
                    "help": "Search text in title",
                    "args": []
                  },
                  "--title": {
                    "name": "--title",
                    "help": "Search text in title",
                    "args": []
                  },
                  "--orderby": {
                    "name": "--orderby",
                    "help": "Field to order by",
                    "args": []
                  },
                  "-A": {
                    "name": "-A",
                    "help": "Sort ascending",
                    "args": []
                  },
                  "--ascending": {
                    "name": "--ascending",
                    "help": "Sort ascending",
                    "args": []
                  },
                  "-D": {
                    "name": "-D",
                    "help": "Sort descending",
                    "args": []
                  },
                  "--descending": {
                    "name": "--descending",
                    "help": "Sort descending",
                    "args": []
                  },
                  "-f": {
                    "name": "-f",
                    "help": "Save results to file",
                    "args": []
                  },
                  "--output-file": {
                    "name": "--output-file",
                    "help": "Save results to file",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "set-default": {
                "command": "set-default",
                "help": "",
                "args": [],
                "options": {},
                "subcommands": {}
              }
            }
          },
          "set": {
            "command": "set",
            "help": "Set default organization/project",
            "args": [],
            "options": {
              "--org": {
                "name": "--org",
                "help": "Default DevOps organization URL",
                "args": []
              },
              "--project": {
                "name": "--project",
                "help": "Default DevOps project name",
                "args": []
              }
            },
            "subcommands": {}
          },
          "show": {
            "command": "show",
            "help": "Retrieve information from Azure DevOps",
            "args": [],
            "options": {
              "-d": {
                "name": "-d",
                "help": "Logging verbosity: 0=quiet 1=normal 2=debug",
                "args": [
                  "0",
                  "1",
                  "2"
                ]
              },
              "--debug": {
                "name": "--debug",
                "help": "Logging verbosity: 0=quiet 1=normal 2=debug",
                "args": [
                  "0",
                  "1",
                  "2"
                ]
              },
              "--setup": {
                "name": "--setup",
                "help": "(re)run bootstrap of URL+credentials before any subcommand",
                "args": []
              }
            },
            "subcommands": {
              "access-token": {
                "command": "access-token",
                "help": "Show stored Personal Access Token",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "access-token-age": {
                "command": "access-token-age",
                "help": "Show age of the current PAT in minutes",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "config": {
                "command": "config",
                "help": "Display your azdev configstore contents for this profile",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "health": {
                "command": "health",
                "help": "Retrieve Azure DevOps service health",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "repos": {
                "command": "repos",
                "help": "List repositories in one or more projects (headless)",
                "args": [],
                "options": {
                  "-f": {
                    "name": "-f",
                    "help": "Only include repo names containing this substring",
                    "args": []
                  },
                  "--filter": {
                    "name": "--filter",
                    "help": "Only include repo names containing this substring",
                    "args": []
                  }
                },
                "subcommands": {}
              }
            }
          },
          "sprints": {
            "command": "sprints",
            "help": "Manage Azure DevOps sprints (iterations) and sprint-scoped searches",
            "args": [],
            "options": {
              "-d": {
                "name": "-d",
                "help": "0=no logs, 1=info, 2=debug",
                "args": [
                  "0",
                  "1",
                  "2"
                ]
              },
              "--debug": {
                "name": "--debug",
                "help": "0=no logs, 1=info, 2=debug",
                "args": [
                  "0",
                  "1",
                  "2"
                ]
              }
            },
            "subcommands": {
              "list-iterations": {
                "command": "list-iterations",
                "help": "List all iterations (sprints) for a given project & team",
                "args": [],
                "options": {
                  "-p": {
                    "name": "-p",
                    "help": "Azure DevOps project name (defaults to all cached projects if you omit this).",
                    "args": []
                  },
                  "--project": {
                    "name": "--project",
                    "help": "Azure DevOps project name (defaults to all cached projects if you omit this).",
                    "args": []
                  },
                  "-t": {
                    "name": "-t",
                    "help": "Team name under the project",
                    "args": []
                  },
                  "--team": {
                    "name": "--team",
                    "help": "Team name under the project",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "search-items": {
                "command": "search-items",
                "help": "Search work items within a specific sprint (iteration path)",
                "args": [],
                "options": {
                  "-p": {
                    "name": "-p",
                    "help": "Azure DevOps project name",
                    "args": []
                  },
                  "--project": {
                    "name": "--project",
                    "help": "Azure DevOps project name",
                    "args": []
                  },
                  "-t": {
                    "name": "-t",
                    "help": "Team name (context only)",
                    "args": []
                  },
                  "--team": {
                    "name": "--team",
                    "help": "Team name (context only)",
                    "args": []
                  },
                  "-s": {
                    "name": "-s",
                    "help": "Iteration path (e.g. 'Project\\Sprint 2025-05')",
                    "args": []
                  },
                  "--sprint": {
                    "name": "--sprint",
                    "help": "Iteration path (e.g. 'Project\\Sprint 2025-05')",
                    "args": []
                  },
                  "-a": {
                    "name": "-a",
                    "help": "Filter by AssignedTo (substring)",
                    "args": []
                  },
                  "--assignee": {
                    "name": "--assignee",
                    "help": "Filter by AssignedTo (substring)",
                    "args": []
                  },
                  "-r": {
                    "name": "-r",
                    "help": "Filter by CreatedBy (substring)",
                    "args": []
                  },
                  "--reporter": {
                    "name": "--reporter",
                    "help": "Filter by CreatedBy (substring)",
                    "args": []
                  },
                  "-S": {
                    "name": "-S",
                    "help": "Filter by State (exact match)",
                    "args": []
                  },
                  "--state": {
                    "name": "--state",
                    "help": "Filter by State (exact match)",
                    "args": []
                  },
                  "-T": {
                    "name": "-T",
                    "help": "Filter by Title (substring)",
                    "args": []
                  },
                  "--title": {
                    "name": "--title",
                    "help": "Filter by Title (substring)",
                    "args": []
                  },
                  "-o": {
                    "name": "-o",
                    "help": "Field to order by",
                    "args": []
                  },
                  "--orderby": {
                    "name": "--orderby",
                    "help": "Field to order by",
                    "args": []
                  },
                  "-A": {
                    "name": "-A",
                    "help": "Sort ascending (default DESC if --orderby)",
                    "args": []
                  },
                  "--ascending": {
                    "name": "--ascending",
                    "help": "Sort ascending (default DESC if --orderby)",
                    "args": []
                  },
                  "-D": {
                    "name": "-D",
                    "help": "Sort descending (default ASC if --orderby)",
                    "args": []
                  },
                  "--descending": {
                    "name": "--descending",
                    "help": "Sort descending (default ASC if --orderby)",
                    "args": []
                  },
                  "-d": {
                    "name": "-d",
                    "help": "Include full description and extra fields",
                    "args": []
                  },
                  "--details": {
                    "name": "--details",
                    "help": "Include full description and extra fields",
                    "args": []
                  }
                },
                "subcommands": {}
              }
            }
          }
        }
      },
      "trust": {
        "command": "trust",
        "help": "\u001b[36m\u001b[1müóùÔ∏è Trust Client\u001b[0m    Current Profile: \u001b[32m\u001b[4mdefault\u001b[0m",
        "args": [],
        "options": {
          "--version": {
            "name": "--version",
            "help": "Show the version and exit.",
            "args": []
          },
          "--profile": {
            "name": "--profile",
            "help": "ConfigStore profile to use",
            "args": []
          },
          "-p": {
            "name": "-p",
            "help": "ConfigStore profile to use",
            "args": []
          },
          "--debug": {
            "name": "--debug",
            "help": "Enable debug logging",
            "args": []
          }
        },
        "subcommands": {
          "accounts": {
            "command": "accounts",
            "help": "Manage/view BeyondTrust accounts",
            "args": [],
            "options": {},
            "subcommands": {
              "list": {
                "command": "list",
                "help": "List available accounts",
                "args": [],
                "options": {},
                "subcommands": {}
              }
            }
          },
          "auth": {
            "command": "auth",
            "help": "üîê Authenticate to BeyondTrust Password Safe using PS-Auth header (API key + domain creds).",
            "args": [],
            "options": {
              "--base-url": {
                "name": "--base-url",
                "help": "Base URL of BeyondTrust Password Safe (e.g. https://pwdvault.healthequity.com)",
                "args": []
              },
              "--api-key": {
                "name": "--api-key",
                "help": "User-bound API key registered in BeyondTrust.",
                "args": []
              },
              "--username": {
                "name": "--username",
                "help": "Domain username in the form hqy.network\\<username>.",
                "args": []
              },
              "--password": {
                "name": "--password",
                "help": "Domain password for your HQY account.",
                "args": []
              },
              "--profile": {
                "name": "--profile",
                "help": "ConfigStore profile name to save credentials under.",
                "args": []
              },
              "-p": {
                "name": "-p",
                "help": "ConfigStore profile name to save credentials under.",
                "args": []
              }
            },
            "subcommands": {}
          },
          "sessions": {
            "command": "sessions",
            "help": "Launch or view BeyondTrust sessions",
            "args": [],
            "options": {},
            "subcommands": {
              "history": {
                "command": "history",
                "help": "List recent sessions launched by your account",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "launch": {
                "command": "launch",
                "help": "Launch a session for a given account ID",
                "args": [],
                "options": {
                  "--protocol": {
                    "name": "--protocol",
                    "help": "Protocol to launch the session with.",
                    "args": [
                      "rdp",
                      "ssh"
                    ]
                  },
                  "--auto": {
                    "name": "--auto",
                    "help": "Automatically download and open the RDP file with your system's RDP client.",
                    "args": []
                  }
                },
                "subcommands": {}
              }
            }
          },
          "show": {
            "command": "show",
            "help": "Display TorTrust configuration and state",
            "args": [],
            "options": {},
            "subcommands": {
              "access-token": {
                "command": "access-token",
                "help": "Show current session cookie (access token)",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "access-token-age": {
                "command": "access-token-age",
                "help": "Show age and expiry of current session cookie",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "config": {
                "command": "config",
                "help": "Show stored configuration for current profile",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "profiles": {
                "command": "profiles",
                "help": "List available profiles in tortrust configstore",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "session": {
                "command": "session",
                "help": "Show current session cookie, age, and expiry",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "sessions": {
                "command": "sessions",
                "help": "Show recent session activity (audit view)",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "stats": {
                "command": "stats",
                "help": "Show overall TorTrust stats (profiles, sessions)",
                "args": [],
                "options": {},
                "subcommands": {}
              }
            }
          }
        }
      },
      "snow": {
        "command": "snow",
        "help": "\u001b[36m\u001b[1m‚ùÑÔ∏è SNOW Client\u001b[0m     Current Profile: \u001b[32m\u001b[4mdefault\u001b[0m",
        "args": [],
        "options": {
          "--profile": {
            "name": "--profile",
            "help": "ConfigStore profile to use",
            "args": []
          },
          "-p": {
            "name": "-p",
            "help": "ConfigStore profile to use",
            "args": []
          },
          "--debug": {
            "name": "--debug",
            "help": "Enable debug logging",
            "args": []
          }
        },
        "subcommands": {
          "config": {
            "command": "config",
            "help": "‚öôÔ∏è  Dump the stored SNOW config for this profile",
            "args": [],
            "options": {},
            "subcommands": {}
          },
          "create-incident": {
            "command": "create-incident",
            "help": "‚ûï  Create a new incident (Table API: incident)",
            "args": [],
            "options": {
              "--short": {
                "name": "--short",
                "help": "Short description",
                "args": []
              },
              "--desc": {
                "name": "--desc",
                "help": "Long description",
                "args": []
              },
              "--impact": {
                "name": "--impact",
                "help": "",
                "args": []
              },
              "--urgency": {
                "name": "--urgency",
                "help": "",
                "args": []
              }
            },
            "subcommands": {}
          },
          "incidents": {
            "command": "incidents",
            "help": "üìã  List incidents (Table API: incident)",
            "args": [],
            "options": {
              "--query": {
                "name": "--query",
                "help": "sysparm_query, e.g. active=true^ORDERBYDESCsys_updated_on",
                "args": []
              },
              "--fields": {
                "name": "--fields",
                "help": "",
                "args": []
              },
              "--limit": {
                "name": "--limit",
                "help": "",
                "args": []
              },
              "--display": {
                "name": "--display",
                "help": "sysparm_display_value",
                "args": [
                  "true",
                  "false",
                  "all"
                ]
              }
            },
            "subcommands": {}
          },
          "login": {
            "command": "login",
            "help": "üîê  Save credentials & optionally verify connection",
            "args": [],
            "options": {
              "--instance": {
                "name": "--instance",
                "help": "SNOW subdomain (no .service-now.com)",
                "args": []
              },
              "--auth-mode": {
                "name": "--auth-mode",
                "help": "",
                "args": [
                  "basic",
                  "oauth"
                ]
              },
              "--username": {
                "name": "--username",
                "help": "",
                "args": []
              },
              "--password": {
                "name": "--password",
                "help": "",
                "args": []
              },
              "--client-id": {
                "name": "--client-id",
                "help": "",
                "args": []
              },
              "--client-secret": {
                "name": "--client-secret",
                "help": "",
                "args": []
              },
              "--token-url": {
                "name": "--token-url",
                "help": "",
                "args": []
              },
              "--verify": {
                "name": "--verify",
                "help": "Immediately test credentials against the API",
                "args": []
              },
              "--grant": {
                "name": "--grant",
                "help": "OAuth grant type",
                "args": [
                  "client_credentials",
                  "password",
                  "refresh_token"
                ]
              },
              "--scope": {
                "name": "--scope",
                "help": "OAuth scopes (space-delimited)",
                "args": []
              },
              "--no-verify": {
                "name": "--no-verify",
                "help": "Disable TLS verification",
                "args": []
              }
            },
            "subcommands": {}
          }
        }
      },
      "logout": {
        "command": "logout",
        "help": "\u001b[36m\u001b[1müîí Logout Client\u001b[0m   Current Profile: \u001b[32m\u001b[4mCA_cstacks@healthequity.com\u001b[0m",
        "args": [],
        "options": {},
        "subcommands": {}
      },
      "nist": {
        "command": "nist",
        "help": "\u001b[36m\u001b[1müìò  NIST Client\u001b[0m    Current Profile: \u001b[32m\u001b[4mdefault\u001b[0m",
        "args": [],
        "options": {
          "--profile": {
            "name": "--profile",
            "help": "ConfigStore profile to use",
            "args": []
          },
          "-p": {
            "name": "-p",
            "help": "ConfigStore profile to use",
            "args": []
          },
          "--debug": {
            "name": "--debug",
            "help": "Enable debug logging",
            "args": []
          }
        },
        "subcommands": {
          "check": {
            "command": "check",
            "help": "Run one or more predefined compliance check jobs (or groups)",
            "args": [
              "access-reviews",
              "admin-consent-policy",
              "admin-footprint",
              "admin-service-health",
              "all",
              "app-compliance-policy",
              "audit-log-root",
              "auth-methods-summary",
              "auth-policy",
              "authz-policy",
              "ca-app-restrictions",
              "ca-device-filters",
              "ca-mfa",
              "ca-named-locations",
              "change-tracking",
              "cp-visibility",
              "cross-tenant-partners",
              "cross-tenant-policy-default",
              "defender-alerts",
              "defender-antivirus-status",
              "defender-incidents",
              "defender-machines",
              "defender-software-inventory",
              "defender-vulnerability-assessment",
              "deleted-apps-reviewed",
              "device-compliance",
              "device-health",
              "device-inventory",
              "device-mgmt-summary",
              "device-registration-policy",
              "directory-audit-logs",
              "directory-roles",
              "domain-visibility",
              "group-settings-policy",
              "group-settings-templates",
              "guest-user-checks",
              "identity-governance-visibility",
              "item-insights-summary",
              "least-privilege-jit",
              "mailbox-audit-logs",
              "mfa",
              "notification-templates",
              "org-contact-summary",
              "password-methods",
              "password-policy",
              "planning-policy",
              "pm-summary",
              "registration-summary",
              "risk-detections",
              "role-assignment-visibility",
              "role-elevation-logs",
              "role-templates",
              "schema-eval",
              "schema-extensions",
              "secure-defaults-policy",
              "secure-score",
              "secure-score-profiles",
              "security-alerts",
              "security-center-summary",
              "security-defaults",
              "security-incident-log",
              "sign-in-risk",
              "signin-usage",
              "software-update-summary",
              "sspr-registration",
              "storage-scan",
              "terms-of-use-policy",
              "timeout-policies",
              "user-group-inventory",
              "user-last-login"
            ],
            "options": {
              "--scan-file": {
                "name": "--scan-file",
                "help": "Path to scan_results JSON (auto‚Äêpick latest if omitted)",
                "args": []
              },
              "-s": {
                "name": "-s",
                "help": "Path to scan_results JSON (auto‚Äêpick latest if omitted)",
                "args": []
              }
            },
            "subcommands": {}
          },
          "control": {
            "command": "control",
            "help": "Evaluate a specific control by ID (e.g. IA-2(1))",
            "args": [],
            "options": {
              "--scan-file": {
                "name": "--scan-file",
                "help": "Path to scan state JSON (auto‚Äêpick latest if omitted)",
                "args": []
              },
              "-s": {
                "name": "-s",
                "help": "Path to scan state JSON (auto‚Äêpick latest if omitted)",
                "args": []
              }
            },
            "subcommands": {}
          },
          "db": {
            "command": "db",
            "help": "Load TorchLite data into the DB",
            "args": [],
            "options": {},
            "subcommands": {
              "auth": {
                "command": "auth",
                "help": "üîê Configure Tornist DB credentials and securely store them.",
                "args": [],
                "options": {
                  "--vault-name": {
                    "name": "--vault-name",
                    "help": "Azure Key Vault name (AzureSQL only).",
                    "args": []
                  },
                  "--secret-name": {
                    "name": "--secret-name",
                    "help": "Name of secret to store in Key Vault (AzureSQL only).",
                    "args": []
                  },
                  "--storage-account": {
                    "name": "--storage-account",
                    "help": "Azure Storage account for config blob.",
                    "args": []
                  },
                  "--db": {
                    "name": "--db",
                    "help": "Which database backend to configure",
                    "args": [
                      "sqlite",
                      "azuresql"
                    ]
                  }
                },
                "subcommands": {}
              },
              "backup-sqlite": {
                "command": "backup-sqlite",
                "help": "",
                "args": [],
                "options": {
                  "--path": {
                    "name": "--path",
                    "help": "Path to SQLite DB file.",
                    "args": []
                  },
                  "--blob-name": {
                    "name": "--blob-name",
                    "help": "",
                    "args": []
                  },
                  "--container": {
                    "name": "--container",
                    "help": "",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "load-all": {
                "command": "load-all",
                "help": "Run all loaders: controls, operations, mappings, scan",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "load-controls": {
                "command": "load-controls",
                "help": "",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "load-mappings": {
                "command": "load-mappings",
                "help": "Load operations, logic handlers, and control-operation mappings\n    from the latest scan_state_*.json into your database.",
                "args": [],
                "options": {
                  "--snapshot-dir": {
                    "name": "--snapshot-dir",
                    "help": "Directory holding scan_state_*.json snapshots",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "load-operations": {
                "command": "load-operations",
                "help": "",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "load-scan": {
                "command": "load-scan",
                "help": "",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "load-snapshot": {
                "command": "load-snapshot",
                "help": "",
                "args": [],
                "options": {
                  "--file": {
                    "name": "--file",
                    "help": "",
                    "args": []
                  },
                  "--tenant-id": {
                    "name": "--tenant-id",
                    "help": "",
                    "args": []
                  },
                  "--tenant-name": {
                    "name": "--tenant-name",
                    "help": "",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "recreate-db": {
                "command": "recreate-db",
                "help": "Drop & recreate your schema, seed a tenant, and‚Äîif --snapshot-file is passed‚Äîimport it immediately.",
                "args": [],
                "options": {
                  "--tenant-id": {
                    "name": "--tenant-id",
                    "help": "GUID of the tenant. If omitted, generates a new one.",
                    "args": []
                  },
                  "--tenant-name": {
                    "name": "--tenant-name",
                    "help": "Display name for the tenant. Defaults to the tenant ID.",
                    "args": []
                  },
                  "--db": {
                    "name": "--db",
                    "help": "Target database backend.",
                    "args": [
                      "sqlite",
                      "azuresql"
                    ]
                  },
                  "--snapshot-file": {
                    "name": "--snapshot-file",
                    "help": "If provided, will immediately call `load-snapshot` on this file.",
                    "args": []
                  }
                },
                "subcommands": {}
              }
            }
          },
          "download": {
            "command": "download",
            "help": "Download catalog.json + profile.json from NIST OSCAL",
            "args": [],
            "options": {
              "--output-dir": {
                "name": "--output-dir",
                "help": "Where to save downloaded files",
                "args": []
              }
            },
            "subcommands": {}
          },
          "explain": {
            "command": "explain",
            "help": "Explain control mapping, logic and latest scan metadata",
            "args": [],
            "options": {
              "-v": {
                "name": "-v",
                "help": "Also show guidance, statement, and narrative from the last scan",
                "args": []
              },
              "--verbose": {
                "name": "--verbose",
                "help": "Also show guidance, statement, and narrative from the last scan",
                "args": []
              },
              "--scan-file": {
                "name": "--scan-file",
                "help": "Path to scan state JSON (auto‚Äêpick latest if omitted)",
                "args": []
              },
              "-s": {
                "name": "-s",
                "help": "Path to scan state JSON (auto‚Äêpick latest if omitted)",
                "args": []
              }
            },
            "subcommands": {}
          },
          "find-ops": {
            "command": "find-ops",
            "help": "Find control IDs or URLs matching your keywords",
            "args": [],
            "options": {
              "--scan-file": {
                "name": "--scan-file",
                "help": "Path to scan_results JSON (auto‚Äêpick latest if omitted)",
                "args": []
              },
              "-s": {
                "name": "-s",
                "help": "Path to scan_results JSON (auto‚Äêpick latest if omitted)",
                "args": []
              }
            },
            "subcommands": {}
          },
          "map_controls": {
            "command": "map_controls",
            "help": "Map Graph API operations to NIST controls, including nested parts",
            "args": [],
            "options": {
              "--csv": {
                "name": "--csv",
                "help": "Export flat CSV of mappings",
                "args": []
              }
            },
            "subcommands": {}
          },
          "parse": {
            "command": "parse",
            "help": "Parse downloaded catalog.json into readable JSON",
            "args": [],
            "options": {
              "--catalog": {
                "name": "--catalog",
                "help": "Path to catalog.json",
                "args": []
              }
            },
            "subcommands": {}
          },
          "scan": {
            "command": "scan",
            "help": "Perform a live compliance scan against Graph endpoints",
            "args": [],
            "options": {
              "--grouped": {
                "name": "--grouped",
                "help": "Grouped operations file",
                "args": []
              },
              "--save": {
                "name": "--save",
                "help": "Save ‚Äúraw‚Äù results path",
                "args": []
              },
              "--markdown": {
                "name": "--markdown",
                "help": "Also emit Markdown/HTML",
                "args": []
              },
              "--simulate-drift": {
                "name": "--simulate-drift",
                "help": "Simulate scan drift for testing",
                "args": [
                  "none",
                  "add",
                  "remove",
                  "change"
                ]
              }
            },
            "subcommands": {}
          }
        }
      },
      "info": {
        "command": "info",
        "help": "\u001b[36m\u001b[1müõà Info Client\u001b[0m     Current Profile: \u001b[32m\u001b[4mdefault\u001b[0m",
        "args": [],
        "options": {
          "--profile": {
            "name": "--profile",
            "help": "ConfigStore profile override",
            "args": []
          },
          "-p": {
            "name": "-p",
            "help": "ConfigStore profile override",
            "args": []
          }
        },
        "subcommands": {
          "azure": {
            "command": "azure",
            "help": "Show Azure account, subscriptions & regions",
            "args": [],
            "options": {
              "--subscription": {
                "name": "--subscription",
                "help": "Subscription override",
                "args": []
              },
              "-s": {
                "name": "-s",
                "help": "Subscription override",
                "args": []
              }
            },
            "subcommands": {}
          },
          "config": {
            "command": "config",
            "help": "List ConfigStore stores & active profiles",
            "args": [],
            "options": {},
            "subcommands": {}
          },
          "env": {
            "command": "env",
            "help": "Show env vars (secrets redacted)",
            "args": [],
            "options": {},
            "subcommands": {}
          },
          "version": {
            "command": "version",
            "help": "Show torlite & Python versions",
            "args": [],
            "options": {},
            "subcommands": {}
          }
        }
      },
      "login": {
        "command": "login",
        "help": "\u001b[36m\u001b[1müîê Login Client\u001b[0m    Current Profile: \u001b[32m\u001b[4mCA_cstacks@healthequity.com\u001b[0m",
        "args": [],
        "options": {
          "--auth-mode": {
            "name": "--auth-mode",
            "help": "Authentication flow: env=EnvironmentCredential, sp=Service Principal, device_code=Device Code, interactive, msi=Managed Identity",
            "args": [
              "env",
              "sp",
              "device_code",
              "interactive",
              "msi"
            ]
          },
          "--tenant-id": {
            "name": "--tenant-id",
            "help": "Tenant ID (required for sp/device_code when CA requires it)",
            "args": []
          },
          "--client-id": {
            "name": "--client-id",
            "help": "Service Principal client ID (required for sp)",
            "args": []
          },
          "--client-secret": {
            "name": "--client-secret",
            "help": "Service Principal client secret (required for sp)",
            "args": []
          },
          "--identity-id": {
            "name": "--identity-id",
            "help": "User-assigned managed identity client ID or resource ID (for msi)",
            "args": []
          },
          "--environment": {
            "name": "--environment",
            "help": "Azure cloud environment",
            "args": [
              "AzureCloud",
              "AzureUSGovernment",
              "AzureChinaCloud",
              "AzureGermanCloud"
            ]
          },
          "--subscription-id": {
            "name": "--subscription-id",
            "help": "Set default subscription after login",
            "args": []
          }
        },
        "subcommands": {}
      },
      "dev": {
        "command": "dev",
        "help": "\u001b[36m\u001b[1müõ†Ô∏è DEV Client\u001b[0m      Current Profile: \u001b[32m\u001b[4mdefault\u001b[0m",
        "args": [],
        "options": {
          "--profile": {
            "name": "--profile",
            "help": "ConfigStore profile to use",
            "args": []
          },
          "-p": {
            "name": "-p",
            "help": "ConfigStore profile to use",
            "args": []
          },
          "--debug": {
            "name": "--debug",
            "help": "Enable debug logging",
            "args": []
          },
          "--offline": {
            "name": "--offline",
            "help": "Disable any cloud calls for this run",
            "args": []
          }
        },
        "subcommands": {
          "aci": {
            "command": "aci",
            "help": "‚öì Manage TorchLite Azure Container Instances",
            "args": [],
            "options": {},
            "subcommands": {
              "connect": {
                "command": "connect",
                "help": "Start if needed and exec into TorchLite ACI (/bin/bash by default)",
                "args": [],
                "options": {
                  "--name": {
                    "name": "--name",
                    "help": "Container group name",
                    "args": []
                  },
                  "-n": {
                    "name": "-n",
                    "help": "Container group name",
                    "args": []
                  },
                  "--container": {
                    "name": "--container",
                    "help": "Container name inside the group",
                    "args": []
                  },
                  "-c": {
                    "name": "-c",
                    "help": "Container name inside the group",
                    "args": []
                  },
                  "--exec-cmd": {
                    "name": "--exec-cmd",
                    "help": "Command to run inside the container",
                    "args": []
                  },
                  "--resource-group": {
                    "name": "--resource-group",
                    "help": "Resource group",
                    "args": []
                  },
                  "-g": {
                    "name": "-g",
                    "help": "Resource group",
                    "args": []
                  },
                  "--subscription": {
                    "name": "--subscription",
                    "help": "Subscription name/ID",
                    "args": []
                  },
                  "-s": {
                    "name": "-s",
                    "help": "Subscription name/ID",
                    "args": []
                  },
                  "--all-subs": {
                    "name": "--all-subs",
                    "help": "Scan all subscriptions if not found in active",
                    "args": []
                  },
                  "--start": {
                    "name": "--start",
                    "help": "Start the group if stopped before connecting",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "exec": {
                "command": "exec",
                "help": "Run an arbitrary command inside TorchLite ACI without interactive shell",
                "args": [],
                "options": {
                  "--name": {
                    "name": "--name",
                    "help": "Container group name",
                    "args": []
                  },
                  "-n": {
                    "name": "-n",
                    "help": "Container group name",
                    "args": []
                  },
                  "--container": {
                    "name": "--container",
                    "help": "Container name inside the group",
                    "args": []
                  },
                  "-c": {
                    "name": "-c",
                    "help": "Container name inside the group",
                    "args": []
                  },
                  "--exec-cmd": {
                    "name": "--exec-cmd",
                    "help": "Command to run inside the container",
                    "args": []
                  },
                  "--resource-group": {
                    "name": "--resource-group",
                    "help": "Resource group",
                    "args": []
                  },
                  "-g": {
                    "name": "-g",
                    "help": "Resource group",
                    "args": []
                  },
                  "--subscription": {
                    "name": "--subscription",
                    "help": "Subscription name/ID",
                    "args": []
                  },
                  "-s": {
                    "name": "-s",
                    "help": "Subscription name/ID",
                    "args": []
                  },
                  "--all-subs": {
                    "name": "--all-subs",
                    "help": "Scan all subscriptions if not found in active",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "start": {
                "command": "start",
                "help": "Start TorchLite ACI container group if stopped",
                "args": [],
                "options": {
                  "--name": {
                    "name": "--name",
                    "help": "Container group name",
                    "args": []
                  },
                  "-n": {
                    "name": "-n",
                    "help": "Container group name",
                    "args": []
                  },
                  "--resource-group": {
                    "name": "--resource-group",
                    "help": "Resource group",
                    "args": []
                  },
                  "-g": {
                    "name": "-g",
                    "help": "Resource group",
                    "args": []
                  },
                  "--subscription": {
                    "name": "--subscription",
                    "help": "Subscription name/ID",
                    "args": []
                  },
                  "-s": {
                    "name": "-s",
                    "help": "Subscription name/ID",
                    "args": []
                  },
                  "--all-subs": {
                    "name": "--all-subs",
                    "help": "Scan all subscriptions if not found in active",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "status": {
                "command": "status",
                "help": "Show current status of TorchLite ACI container group",
                "args": [],
                "options": {
                  "--name": {
                    "name": "--name",
                    "help": "Container group name",
                    "args": []
                  },
                  "-n": {
                    "name": "-n",
                    "help": "Container group name",
                    "args": []
                  },
                  "--resource-group": {
                    "name": "--resource-group",
                    "help": "Resource group",
                    "args": []
                  },
                  "-g": {
                    "name": "-g",
                    "help": "Resource group",
                    "args": []
                  },
                  "--subscription": {
                    "name": "--subscription",
                    "help": "Subscription name/ID",
                    "args": []
                  },
                  "-s": {
                    "name": "-s",
                    "help": "Subscription name/ID",
                    "args": []
                  },
                  "--all-subs": {
                    "name": "--all-subs",
                    "help": "Scan all subscriptions if not found in active",
                    "args": []
                  }
                },
                "subcommands": {}
              }
            }
          },
          "build-tree": {
            "command": "cli",
            "help": "Build the TorchLite CLI command tree (torlite.json).",
            "args": [],
            "options": {
              "--yes": {
                "name": "--yes",
                "help": "Run without interactive confirmation.",
                "args": []
              },
              "-y": {
                "name": "-y",
                "help": "Run without interactive confirmation.",
                "args": []
              },
              "--output": {
                "name": "--output",
                "help": "Custom output path for torlite.json.",
                "args": []
              },
              "-o": {
                "name": "-o",
                "help": "Custom output path for torlite.json.",
                "args": []
              },
              "--import": {
                "name": "--import",
                "help": "Import path to Click root, e.g. 'torlite.torlite:cli'.",
                "args": []
              },
              "--timeout": {
                "name": "--timeout",
                "help": "Per-help invocation timeout (seconds).",
                "args": []
              },
              "--no-merge": {
                "name": "--no-merge",
                "help": "Skip help-scrape merge (use click only).",
                "args": []
              },
              "--debug": {
                "name": "--debug",
                "help": "Verbose debug logging.",
                "args": []
              }
            },
            "subcommands": {}
          },
          "check-scopes": {
            "command": "check-scopes",
            "help": "Check SP‚Äôs Graph application-permissions against required Purview/Defender/Sentinel/M365 scopes.",
            "args": [],
            "options": {},
            "subcommands": {}
          },
          "generate-index": {
            "command": "generate-index",
            "help": "üìë Generate top-level command index from torlite.json",
            "args": [],
            "options": {
              "--output": {
                "name": "--output",
                "help": "Path to write index file",
                "args": []
              }
            },
            "subcommands": {}
          },
          "generate-readmes": {
            "command": "generate-readmes",
            "help": "üìÑ Generate README.md per module from torlite.json",
            "args": [],
            "options": {
              "--output-dir": {
                "name": "--output-dir",
                "help": "Repo root to locate modules like toraudit/, tornist/, etc.",
                "args": []
              }
            },
            "subcommands": {}
          },
          "git": {
            "command": "git",
            "help": "üîÅ Automate common Git workflow tasks",
            "args": [],
            "options": {
              "--branch": {
                "name": "--branch",
                "help": "Create and switch to a new branch",
                "args": []
              },
              "--add-path": {
                "name": "--add-path",
                "help": "Optional: file or directory to stage (default: '.')",
                "args": []
              },
              "--commit": {
                "name": "--commit",
                "help": "Optional: commit message after staging",
                "args": []
              },
              "--push": {
                "name": "--push",
                "help": "Push current branch and set upstream if needed",
                "args": []
              },
              "--sync": {
                "name": "--sync",
                "help": "Merge latest master into current branch",
                "args": []
              },
              "--cleanup": {
                "name": "--cleanup",
                "help": "Delete current branch locally and remotely",
                "args": []
              }
            },
            "subcommands": {}
          },
          "install-completions": {
            "command": "install-completions",
            "help": "üìë Install shell completion for torlite",
            "args": [],
            "options": {
              "-y": {
                "name": "-y",
                "help": "Skip confirmation prompt",
                "args": []
              },
              "--yes": {
                "name": "--yes",
                "help": "Skip confirmation prompt",
                "args": []
              }
            },
            "subcommands": {}
          },
          "module": {
            "command": "module",
            "help": "üîß Manage local TorchLite modules (build, sync, install)",
            "args": [],
            "options": {},
            "subcommands": {
              "build": {
                "command": "build",
                "help": "üì¶ Build and install one or more modules",
                "args": [],
                "options": {
                  "--install": {
                    "name": "--install",
                    "help": "Install after build (default: on)",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "install": {
                "command": "install",
                "help": "üìÇ Install one or more modules in editable mode",
                "args": [],
                "options": {},
                "subcommands": {}
              }
            }
          },
          "qbt": {
            "command": "qbt",
            "help": "QuickBooks Time (TSheets) ‚Äì token-only",
            "args": [],
            "options": {},
            "subcommands": {
              "add-time": {
                "command": "add-time",
                "help": "Create a duration-based timesheet entry",
                "args": [],
                "options": {
                  "--token": {
                    "name": "--token",
                    "help": "Token override",
                    "args": []
                  },
                  "--date": {
                    "name": "--date",
                    "help": "Work date (YYYY-MM-DD)",
                    "args": []
                  },
                  "--hours": {
                    "name": "--hours",
                    "help": "Duration in hours (e.g., 7.5)",
                    "args": []
                  },
                  "--notes": {
                    "name": "--notes",
                    "help": "Notes for the timesheet",
                    "args": []
                  },
                  "--project": {
                    "name": "--project",
                    "help": "Project name substring to match",
                    "args": []
                  },
                  "--project-id": {
                    "name": "--project-id",
                    "help": "Jobcode ID (overrides --project)",
                    "args": []
                  },
                  "--user-id": {
                    "name": "--user-id",
                    "help": "Your user id (optional)",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "config": {
                "command": "config",
                "help": "Manage QuickBooks Time configuration",
                "args": [],
                "options": {},
                "subcommands": {
                  "set-default-user": {
                    "command": "set-default-user",
                    "help": "Save default user id",
                    "args": [],
                    "options": {
                      "--user-id": {
                        "name": "--user-id",
                        "help": "",
                        "args": []
                      }
                    },
                    "subcommands": {}
                  },
                  "set-token": {
                    "command": "set-token",
                    "help": "Save the API token to ConfigStore(quickbooks_time)",
                    "args": [],
                    "options": {
                      "--token": {
                        "name": "--token",
                        "help": "Access token from QuickBooks Time API Add-on",
                        "args": []
                      },
                      "--base-url": {
                        "name": "--base-url",
                        "help": "Override base URL (default: https://rest.tsheets.com/api/v1)",
                        "args": []
                      }
                    },
                    "subcommands": {}
                  },
                  "show": {
                    "command": "show",
                    "help": "Show current config (token hidden)",
                    "args": [],
                    "options": {},
                    "subcommands": {}
                  }
                }
              },
              "projects": {
                "command": "projects",
                "help": "List active projects/jobcodes",
                "args": [],
                "options": {
                  "--token": {
                    "name": "--token",
                    "help": "Token override (useful for testing)",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "users": {
                "command": "users",
                "help": "List active users",
                "args": [],
                "options": {
                  "--token": {
                    "name": "--token",
                    "help": "Token override (useful for testing)",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "whoami": {
                "command": "whoami",
                "help": "Show detected user",
                "args": [],
                "options": {
                  "--token": {
                    "name": "--token",
                    "help": "Token override",
                    "args": []
                  },
                  "--user-id": {
                    "name": "--user-id",
                    "help": "Explicit user id",
                    "args": []
                  }
                },
                "subcommands": {}
              }
            }
          },
          "run_sp_scopes_check": {
            "command": "check-scopes",
            "help": "Check SP‚Äôs Graph application-permissions against required Purview/Defender/Sentinel/M365 scopes.",
            "args": [],
            "options": {},
            "subcommands": {}
          },
          "update": {
            "command": "myupdate",
            "help": "‚¨ÜÔ∏è  Update private deps and torlite (wheelhouse-aware).",
            "args": [],
            "options": {
              "--wheelhouse": {
                "name": "--wheelhouse",
                "help": "Path to .wheelhouse (default: <repo>/.wheelhouse)",
                "args": []
              },
              "--offline": {
                "name": "--offline",
                "help": "Do not hit PyPI; install only from wheelhouse.",
                "args": []
              },
              "--rebuild-wheelhouse": {
                "name": "--rebuild-wheelhouse",
                "help": "Scan repo and restage newest wheels into wheelhouse.",
                "args": []
              },
              "--constraints": {
                "name": "--constraints",
                "help": "Optional constraints file for public deps.",
                "args": []
              },
              "-v": {
                "name": "-v",
                "help": "Verbose pip output.",
                "args": []
              },
              "--verbose": {
                "name": "--verbose",
                "help": "Verbose pip output.",
                "args": []
              }
            },
            "subcommands": {}
          },
          "validate-completions": {
            "command": "validate-completions",
            "help": "Validate torlite Bash completion setup",
            "args": [],
            "options": {},
            "subcommands": {}
          }
        }
      },
      "sentinel": {
        "command": "sentinel",
        "help": "\u001b[36m\u001b[1müëÅÔ∏è  Sentinel Help\u001b[0m  Current Profile: \u001b[32m\u001b[4mdefault\u001b[0m",
        "args": [],
        "options": {
          "--profile": {
            "name": "--profile",
            "help": "ConfigStore profile to use",
            "args": []
          },
          "-p": {
            "name": "-p",
            "help": "ConfigStore profile to use",
            "args": []
          },
          "--debug": {
            "name": "--debug",
            "help": "Enable debug logging",
            "args": []
          }
        },
        "subcommands": {
          "config": {
            "command": "config",
            "help": "‚öôÔ∏è  Dump the stored Sentinel config for this profile",
            "args": [],
            "options": {},
            "subcommands": {}
          },
          "run": {
            "command": "run",
            "help": "ÔøΩÔøΩ Execute a KQL query against Azure Sentinel (Log Analytics)",
            "args": [],
            "options": {
              "--query": {
                "name": "--query",
                "help": "Kusto Query Language (KQL) query to execute",
                "args": []
              },
              "-q": {
                "name": "-q",
                "help": "Kusto Query Language (KQL) query to execute",
                "args": []
              },
              "--workspace-id": {
                "name": "--workspace-id",
                "help": "Log Analytics workspace ID (overrides stored value)",
                "args": []
              },
              "-w": {
                "name": "-w",
                "help": "Log Analytics workspace ID (overrides stored value)",
                "args": []
              },
              "--timespan": {
                "name": "--timespan",
                "help": "Timespan (ISO 8601) for the query, e.g. P1D, PT6H",
                "args": []
              },
              "-t": {
                "name": "-t",
                "help": "Timespan (ISO 8601) for the query, e.g. P1D, PT6H",
                "args": []
              }
            },
            "subcommands": {}
          }
        }
      },
      "audit": {
        "command": "audit",
        "help": "\u001b[36m\u001b[1müõ°Ô∏è  Audit Client\u001b[0m   Current Profile: \u001b[32m\u001b[4mdefault\u001b[0m",
        "args": [],
        "options": {},
        "subcommands": {
          "bootstrap": {
            "command": "bootstrap",
            "help": "üîß Initialize SSH keys, discover Linux VMs, and cache fleet info",
            "args": [],
            "options": {
              "--ssh-user": {
                "name": "--ssh-user",
                "help": "Override SSH username",
                "args": []
              },
              "--provider": {
                "name": "--provider",
                "help": "Cloud provider to discover systems on",
                "args": [
                  "azure",
                  "aws",
                  "gcp",
                  "oci"
                ]
              }
            },
            "subcommands": {}
          },
          "fleet-scan": {
            "command": "fleet-scan",
            "help": "üåê Run OpenSCAP compliance scan against multiple remote systems by profile title. Pass --profile-title to apply one profile to all, or omit it for per-host interactive selection.",
            "args": [],
            "options": {
              "--profile-title": {
                "name": "--profile-title",
                "help": "Global Profile Title (e.g. 'DISA STIG for RHEL 9')",
                "args": []
              },
              "--host": {
                "name": "--host",
                "help": "Target host(s) or 'all'",
                "args": []
              },
              "--datastream": {
                "name": "--datastream",
                "help": "Path to SCAP datastream (override auto-discovery)",
                "args": []
              },
              "--input-file": {
                "name": "--input-file",
                "help": "YAML/JSON input file containing fleet_scans entries",
                "args": []
              },
              "--export-json": {
                "name": "--export-json",
                "help": "Directory to export per-host JSON results",
                "args": []
              },
              "--export-csv": {
                "name": "--export-csv",
                "help": "Directory to export per-host CSV results",
                "args": []
              },
              "--remediate": {
                "name": "--remediate",
                "help": "Apply remediations automatically (careful!)",
                "args": []
              },
              "--include-rule": {
                "name": "--include-rule",
                "help": "Only scan specific rule IDs",
                "args": []
              },
              "--exclude-rule": {
                "name": "--exclude-rule",
                "help": "Exclude specific rule IDs",
                "args": []
              },
              "--concurrency": {
                "name": "--concurrency",
                "help": "Parallel scans (default 5)",
                "args": []
              }
            },
            "subcommands": {}
          },
          "fleet-summary": {
            "command": "fleet-summary",
            "help": "üìä Generate fleet-wide OpenSCAP summary report.",
            "args": [],
            "options": {},
            "subcommands": {}
          },
          "local-scan": {
            "command": "local-scan",
            "help": "üíª Run OpenSCAP on local system",
            "args": [],
            "options": {
              "--profile": {
                "name": "--profile",
                "help": "Profile ID (e.g., xccdf_org.ssgproject.content_profile_stig)",
                "args": []
              },
              "--datastream": {
                "name": "--datastream",
                "help": "Path to SCAP datastream",
                "args": []
              },
              "--base-path": {
                "name": "--base-path",
                "help": "Path to mounted host - i.e. /mnt/host",
                "args": []
              },
              "--report": {
                "name": "--report",
                "help": "HTML output report",
                "args": []
              },
              "--results": {
                "name": "--results",
                "help": "Raw scan results file",
                "args": []
              },
              "--export-json": {
                "name": "--export-json",
                "help": "Optional path to export parsed scan results as JSON",
                "args": []
              },
              "--export-csv": {
                "name": "--export-csv",
                "help": "Optional path to export parsed scan results as CSV",
                "args": []
              },
              "--remediate": {
                "name": "--remediate",
                "help": "Apply remediations automatically (use with caution!)",
                "args": []
              },
              "--include-rule": {
                "name": "--include-rule",
                "help": "Only scan specific rule IDs",
                "args": []
              },
              "--exclude-rule": {
                "name": "--exclude-rule",
                "help": "Exclude specific rule IDs",
                "args": []
              }
            },
            "subcommands": {}
          },
          "profile-list": {
            "command": "profile-list",
            "help": "üìã Collect and list available profiles across the fleet",
            "args": [],
            "options": {},
            "subcommands": {}
          },
          "profile-show": {
            "command": "profile-show",
            "help": "üëÄ Show compliance profiles for a host or all",
            "args": [],
            "options": {
              "--host": {
                "name": "--host",
                "help": "Target host IP or 'all'",
                "args": []
              }
            },
            "subcommands": {}
          },
          "report": {
            "command": "report",
            "help": "üìÑ Generate Fleet Access Report",
            "args": [],
            "options": {},
            "subcommands": {}
          },
          "sync-ssh-keys": {
            "command": "sync-ssh-keys",
            "help": "üîÑ Sync SSH keys between hosts and Azure Key Vault",
            "args": [],
            "options": {
              "--input-file": {
                "name": "--input-file",
                "help": "plan file with fleet_scans list",
                "args": []
              },
              "--host": {
                "name": "--host",
                "help": "hosts or 'all'",
                "args": []
              },
              "--vault-name": {
                "name": "--vault-name",
                "help": "Key Vault name",
                "args": []
              },
              "--ssh-keyfile": {
                "name": "--ssh-keyfile",
                "help": "Fallback SSH key",
                "args": []
              },
              "-k": {
                "name": "-k",
                "help": "Fallback SSH key",
                "args": []
              }
            },
            "subcommands": {}
          },
          "verify-fleet": {
            "command": "verify-fleet",
            "help": "üîí Verify fleet access from the Torch-Shell Container (or host)",
            "args": [],
            "options": {
              "--force-bootstrap": {
                "name": "--force-bootstrap",
                "help": "Force running bootstrap even if fleet exists.",
                "args": []
              },
              "--require-password": {
                "name": "--require-password",
                "help": "Optional SSH password (prompts if not provided).",
                "args": []
              }
            },
            "subcommands": {}
          }
        }
      },
      "configs": {
        "command": "cli",
        "help": "\u001b[36m\u001b[1müì¶ Config Client\u001b[0m   Current Profile: \u001b[32m\u001b[4mdefault\u001b[0m",
        "args": [],
        "options": {
          "-p": {
            "name": "-p",
            "help": "Profile to use",
            "args": []
          },
          "--profile": {
            "name": "--profile",
            "help": "Profile to use",
            "args": []
          },
          "-d": {
            "name": "-d",
            "help": "Enable debug logging",
            "args": []
          },
          "--debug": {
            "name": "--debug",
            "help": "Enable debug logging",
            "args": []
          }
        },
        "subcommands": {
          "cloud-set": {
            "command": "cloud-set",
            "help": "‚òÅÔ∏è  Set the Azure cloud for SDK/REST calls",
            "args": [],
            "options": {
              "--cloud": {
                "name": "--cloud",
                "help": "",
                "args": [
                  "AzureCloud",
                  "AzureUSGovernment",
                  "AzureChinaCloud",
                  "AzureGermanCloud"
                ]
              }
            },
            "subcommands": {}
          },
          "cloud-show": {
            "command": "cloud-show",
            "help": "‚òÅÔ∏è  Show which Azure cloud is configured",
            "args": [],
            "options": {},
            "subcommands": {}
          },
          "create": {
            "command": "create",
            "help": "üÜï Create a new configstore or profile",
            "args": [],
            "options": {
              "-n": {
                "name": "-n",
                "help": "ConfigStore name",
                "args": []
              },
              "--name": {
                "name": "--name",
                "help": "ConfigStore name",
                "args": []
              },
              "-p": {
                "name": "-p",
                "help": "Profile to create",
                "args": []
              },
              "--profile": {
                "name": "--profile",
                "help": "Profile to create",
                "args": []
              }
            },
            "subcommands": {}
          },
          "creds": {
            "command": "creds",
            "help": "üîë Manage credentials in the config store",
            "args": [],
            "options": {},
            "subcommands": {
              "add": {
                "command": "add",
                "help": "Add a credential entry",
                "args": [],
                "options": {
                  "--username": {
                    "name": "--username",
                    "help": "Username",
                    "args": []
                  },
                  "--password": {
                    "name": "--password",
                    "help": "Password (encrypted)",
                    "args": []
                  },
                  "--hostname": {
                    "name": "--hostname",
                    "help": "Optional hostname",
                    "args": []
                  }
                },
                "subcommands": {}
              },
              "get": {
                "command": "get",
                "help": "Retrieve a credential entry",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "list": {
                "command": "list",
                "help": "List stored credentials",
                "args": [],
                "options": {},
                "subcommands": {}
              },
              "remove": {
                "command": "remove",
                "help": "Remove a credential entry",
                "args": [],
                "options": {},
                "subcommands": {}
              }
            }
          },
          "delete": {
            "command": "delete",
            "help": "üóëÔ∏è  Delete a profile or wipe an entire configstore",
            "args": [],
            "options": {
              "-n": {
                "name": "-n",
                "help": "ConfigStore name",
                "args": []
              },
              "--name": {
                "name": "--name",
                "help": "ConfigStore name",
                "args": []
              },
              "-p": {
                "name": "-p",
                "help": "Profile to delete",
                "args": []
              },
              "--profile": {
                "name": "--profile",
                "help": "Profile to delete",
                "args": []
              },
              "--remove": {
                "name": "--remove",
                "help": "Also delete blob from Azure storage",
                "args": []
              }
            },
            "subcommands": {}
          },
          "doctor": {
            "command": "doctor",
            "help": "ü©∫ Diagnose issues with your configstore setup, locally or in Azure.",
            "args": [],
            "options": {
              "-n": {
                "name": "-n",
                "help": "ConfigStore namespace to check (omit to list all stores)",
                "args": []
              },
              "--name": {
                "name": "--name",
                "help": "ConfigStore namespace to check (omit to list all stores)",
                "args": []
              },
              "-p": {
                "name": "-p",
                "help": "Profile name to inspect",
                "args": []
              },
              "--profile": {
                "name": "--profile",
                "help": "Profile name to inspect",
                "args": []
              },
              "-b": {
                "name": "-b",
                "help": "Which backend to inspect. Default: auto (list checks both; single-store uses runtime-detected default).",
                "args": [
                  "auto",
                  "local",
                  "azure"
                ]
              },
              "--backend": {
                "name": "--backend",
                "help": "Which backend to inspect. Default: auto (list checks both; single-store uses runtime-detected default).",
                "args": [
                  "auto",
                  "local",
                  "azure"
                ]
              }
            },
            "subcommands": {}
          },
          "set": {
            "command": "set",
            "help": "‚úèÔ∏è  Set a profile's data to the given JSON payload",
            "args": [],
            "options": {
              "-n": {
                "name": "-n",
                "help": "ConfigStore name",
                "args": []
              },
              "--name": {
                "name": "--name",
                "help": "ConfigStore name",
                "args": []
              },
              "-p": {
                "name": "-p",
                "help": "Profile to update",
                "args": []
              },
              "--profile": {
                "name": "--profile",
                "help": "Profile to update",
                "args": []
              },
              "--json": {
                "name": "--json",
                "help": "JSON string to write",
                "args": []
              }
            },
            "subcommands": {}
          },
          "show": {
            "command": "show",
            "help": "üîç Show one or all profiles from a configstore",
            "args": [],
            "options": {
              "-n": {
                "name": "-n",
                "help": "ConfigStore name",
                "args": []
              },
              "--name": {
                "name": "--name",
                "help": "ConfigStore name",
                "args": []
              }
            },
            "subcommands": {}
          }
        }
      }
    }
  },
  "_meta": {
    "generated_at": 1758853893.794392,
    "version": 1,
    "source": "click+help"
  }
}